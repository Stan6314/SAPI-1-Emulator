// Filling of MHB2501 ROM - ASCII 5*7 character generator
// Warning! Must be in RAM! Must not be in program flash!
uint8_t MHB2501rom[] = {
// First half contains higher characters (due 6 bit addressing)
 0x0C, 0x11, 0x13, 0x15, 0x17, 0x10, 0x0E, 0x00, // 40  64 @
 0x04, 0x0A, 0x11, 0x1F, 0x11, 0x11, 0x11, 0x00, // 41  65 A
 0x1E, 0x11, 0x11, 0x1E, 0x11, 0x11, 0x1E, 0x00, // 42  66 B
 0x0E, 0x11, 0x10, 0x10, 0x10, 0x11, 0x0E, 0x00, // 43  67 C
 0x1E, 0x09, 0x09, 0x09, 0x09, 0x09, 0x1E, 0x00, // 44  68 D
 0x1F, 0x10, 0x10, 0x1E, 0x10, 0x10, 0x1F, 0x00, // 45  69 E
 0x1F, 0x10, 0x10, 0x1E, 0x10, 0x10, 0x10, 0x00, // 46  70 F
 0x0F, 0x10, 0x10, 0x13, 0x11, 0x11, 0x0F, 0x00, // 47  71 G
 0x11, 0x11, 0x11, 0x1F, 0x11, 0x11, 0x11, 0x00, // 48  72 H
 0x0E, 0x04, 0x04, 0x04, 0x04, 0x04, 0x0E, 0x00, // 49  73 I
 0x01, 0x01, 0x01, 0x01, 0x11, 0x11, 0x0E, 0x00, // 4A  74 J
 0x11, 0x12, 0x14, 0x18, 0x14, 0x12, 0x11, 0x00, // 4B  75 K
 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x1F, 0x00, // 4C  76 L
 0x11, 0x1B, 0x15, 0x15, 0x11, 0x11, 0x11, 0x00, // 4D  77 M
 0x11, 0x11, 0x19, 0x15, 0x13, 0x11, 0x11, 0x00, // 4E  78 N
 0x0E, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0E, 0x00, // 4F  79 O
 0x1E, 0x11, 0x11, 0x1E, 0x10, 0x10, 0x10, 0x00, // 50  80 P
 0x0E, 0x11, 0x11, 0x11, 0x15, 0x12, 0x0D, 0x00, // 51  81 Q
 0x1E, 0x11, 0x11, 0x1E, 0x14, 0x12, 0x11, 0x00, // 52  82 R
 0x0E, 0x11, 0x10, 0x0E, 0x01, 0x11, 0x0E, 0x00, // 53  83 S
 0x1F, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x00, // 54  84 T
 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0E, 0x00, // 55  85 U
 0x11, 0x11, 0x11, 0x0A, 0x0A, 0x04, 0x04, 0x00, // 56  86 V
 0x11, 0x11, 0x11, 0x15, 0x15, 0x15, 0x0A, 0x00, // 57  87 W
 0x11, 0x11, 0x0A, 0x04, 0x0A, 0x11, 0x11, 0x00, // 58  88 X
 0x11, 0x11, 0x0A, 0x04, 0x04, 0x04, 0x04, 0x00, // 59  89 Y
 0x1F, 0x01, 0x02, 0x04, 0x08, 0x10, 0x1F, 0x00, // 5A  90 Z
 0x1C, 0x10, 0x10, 0x10, 0x10, 0x10, 0x1C, 0x00, // 5B  91 [
 0x00, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00, 0x00, // 5C  92 '\'
 0x07, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, // 5D  93 ]
 0x0E, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 5E  94 ^
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, // 5F  95 _

 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 20  32
 0x04, 0x04, 0x04, 0x04, 0x04, 0x00, 0x04, 0x00, // 21  33 !
 0x0A, 0x0A, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, // 22  34 "
 0x0A, 0x0A, 0x1F, 0x0A, 0x1F, 0x0A, 0x0A, 0x00, // 23  35 #
 0x00, 0x11, 0x0E, 0x0A, 0x0E, 0x11, 0x00, 0x00, // 24  36 $
 0x18, 0x19, 0x02, 0x04, 0x08, 0x13, 0x03, 0x00, // 25  37 %
 0x08, 0x14, 0x14, 0x08, 0x15, 0x12, 0x0D, 0x00, // 26  38 &
 0x04, 0x04, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, // 27  39 '
 0x02, 0x04, 0x08, 0x08, 0x08, 0x04, 0x02, 0x00, // 28  40 (
 0x08, 0x04, 0x02, 0x02, 0x02, 0x04, 0x08, 0x00, // 29  41 )
 0x00, 0x04, 0x15, 0x0E, 0x15, 0x04, 0x00, 0x00, // 2A  42 *
 0x00, 0x04, 0x04, 0x1F, 0x04, 0x04, 0x00, 0x00, // 2B  43 +
 0x00, 0x00, 0x00, 0x00, 0x0C, 0x04, 0x08, 0x00, // 2C  44 ,
 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, // 2D  45 -
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, // 2E  46 .
 0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x00, 0x00, // 2F  47 /
 0x0E, 0x11, 0x13, 0x15, 0x19, 0x11, 0x0E, 0x00, // 30  48 0
 0x04, 0x0C, 0x04, 0x04, 0x04, 0x04, 0x0E, 0x00, // 31  49 1
 0x0E, 0x11, 0x01, 0x02, 0x04, 0x08, 0x1F, 0x00, // 32  50 2
 0x0E, 0x11, 0x01, 0x06, 0x01, 0x11, 0x0E, 0x00, // 33  51 3
 0x02, 0x06, 0x0A, 0x12, 0x1F, 0x02, 0x02, 0x00, // 34  52 4
 0x1F, 0x10, 0x1E, 0x01, 0x01, 0x11, 0x0E, 0x00, // 35  53 5
 0x06, 0x08, 0x10, 0x1E, 0x11, 0x11, 0x0E, 0x00, // 36  54 6
 0x1F, 0x01, 0x02, 0x04, 0x08, 0x08, 0x08, 0x00, // 37  55 7
 0x0E, 0x11, 0x11, 0x0E, 0x11, 0x11, 0x0E, 0x00, // 38  56 8
 0x0E, 0x11, 0x11, 0x0F, 0x01, 0x02, 0x0C, 0x00, // 39  57 9
 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00, // 3A  58 :
 0x00, 0x00, 0x04, 0x00, 0x04, 0x04, 0x08, 0x00, // 3B  59 ;
 0x02, 0x04, 0x08, 0x10, 0x08, 0x04, 0x02, 0x00, // 3C  60 <
 0x00, 0x00, 0x1F, 0x00, 0x1F, 0x00, 0x00, 0x00, // 3D  61 =
 0x08, 0x04, 0x02, 0x01, 0x02, 0x04, 0x08, 0x00, // 3E  62 >
 0x0E, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04, 0x00  // 3F  63 ?
};

/*
// Alternative filling of MHB2501 ROM - ASCII 5*7 character generator
// Every character has most right column zero (00bbbbb0) for
// space between characters
uint8_t const MHB2501rom[] = {
// First half contains higher characters (due 6 bit addressing)
 0x18, 0x22, 0x26, 0x2A, 0x2E, 0x20, 0x1C, 0x00, // 40  64 @
 0x08, 0x14, 0x22, 0x3E, 0x22, 0x22, 0x22, 0x00, // 41  65 A
 0x3C, 0x22, 0x22, 0x3C, 0x22, 0x22, 0x3C, 0x00, // 42  66 B
 0x1C, 0x22, 0x20, 0x20, 0x20, 0x22, 0x1C, 0x00, // 43  67 C
 0x3C, 0x12, 0x12, 0x12, 0x12, 0x12, 0x3C, 0x00, // 44  68 D
 0x3E, 0x20, 0x20, 0x3C, 0x20, 0x20, 0x3E, 0x00, // 45  69 E
 0x3E, 0x20, 0x20, 0x3C, 0x20, 0x20, 0x20, 0x00, // 46  70 F
 0x1E, 0x20, 0x20, 0x26, 0x22, 0x22, 0x1E, 0x00, // 47  71 G
 0x22, 0x22, 0x22, 0x3E, 0x22, 0x22, 0x22, 0x00, // 48  72 H
 0x1C, 0x08, 0x08, 0x08, 0x08, 0x08, 0x1C, 0x00, // 49  73 I
 0x02, 0x02, 0x02, 0x02, 0x22, 0x22, 0x1C, 0x00, // 4A  74 J
 0x22, 0x24, 0x28, 0x30, 0x28, 0x24, 0x22, 0x00, // 4B  75 K
 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3E, 0x00, // 4C  76 L
 0x22, 0x36, 0x2A, 0x2A, 0x22, 0x22, 0x22, 0x00, // 4D  77 M
 0x22, 0x22, 0x32, 0x2A, 0x26, 0x26, 0x22, 0x00, // 4E  78 N
 0x1C, 0x22, 0x22, 0x22, 0x22, 0x22, 0x1C, 0x00, // 4F  79 O
 0x3C, 0x22, 0x22, 0x3C, 0x20, 0x20, 0x20, 0x00, // 50  80 P
 0x1C, 0x22, 0x22, 0x22, 0x2A, 0x24, 0x1A, 0x00, // 51  81 Q
 0x3C, 0x22, 0x22, 0x3C, 0x28, 0x24, 0x22, 0x00, // 52  82 R
 0x1C, 0x22, 0x20, 0x1C, 0x02, 0x22, 0x1C, 0x00, // 53  83 S
 0x3E, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00, // 54  84 T
 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x1C, 0x00, // 55  85 U
 0x22, 0x22, 0x22, 0x14, 0x14, 0x08, 0x08, 0x00, // 56  86 V
 0x22, 0x22, 0x22, 0x2A, 0x2A, 0x2A, 0x14, 0x00, // 57  87 W
 0x22, 0x22, 0x14, 0x08, 0x14, 0x22, 0x22, 0x00, // 58  88 X
 0x22, 0x22, 0x14, 0x08, 0x08, 0x08, 0x08, 0x00, // 59  89 Y
 0x3E, 0x02, 0x04, 0x08, 0x10, 0x20, 0x3E, 0x00, // 5A  90 Z
 0x38, 0x20, 0x20, 0x20, 0x20, 0x20, 0x38, 0x00, // 5B  91 [
 0x00, 0x20, 0x10, 0x08, 0x04, 0x02, 0x00, 0x00, // 5C  92 '\'
 0x0E, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x00, // 5D  93 ]
 0x1C, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 5E  94 ^
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, // 5F  95 _

 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 20  32
 0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x08, 0x00, // 21  33 !
 0x14, 0x14, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, // 22  34 "
 0x14, 0x14, 0x3E, 0x14, 0x3E, 0x14, 0x14, 0x00, // 23  35 #
 0x00, 0x22, 0x1C, 0x14, 0x1C, 0x22, 0x00, 0x00, // 24  36 $
 0x30, 0x32, 0x04, 0x08, 0x10, 0x26, 0x06, 0x00, // 25  37 %
 0x10, 0x28, 0x28, 0x10, 0x2A, 0x24, 0x1A, 0x00, // 26  38 &
 0x08, 0x08, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, // 27  39 '
 0x04, 0x08, 0x10, 0x10, 0x10, 0x08, 0x04, 0x00, // 28  40 (
 0x10, 0x08, 0x04, 0x04, 0x04, 0x08, 0x10, 0x00, // 29  41 )
 0x00, 0x08, 0x2A, 0x1C, 0x2A, 0x08, 0x00, 0x00, // 2A  42 *
 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08, 0x00, 0x00, // 2B  43 +
 0x00, 0x00, 0x00, 0x00, 0x18, 0x08, 0x10, 0x00, // 2C  44 ,
 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, // 2D  45 -
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, // 2E  46 .
 0x00, 0x02, 0x04, 0x08, 0x10, 0x20, 0x00, 0x00, // 2F  47 /
 0x1C, 0x22, 0x26, 0x2A, 0x32, 0x22, 0x1C, 0x00, // 30  48 0
 0x08, 0x18, 0x08, 0x08, 0x08, 0x08, 0x1C, 0x00, // 31  49 1
 0x1C, 0x22, 0x02, 0x04, 0x08, 0x10, 0x3E, 0x00, // 32  50 2
 0x1C, 0x22, 0x02, 0x0C, 0x02, 0x22, 0x1C, 0x00, // 33  51 3
 0x04, 0x0C, 0x14, 0x24, 0x3E, 0x04, 0x04, 0x00, // 34  52 4
 0x3E, 0x20, 0x3C, 0x02, 0x02, 0x22, 0x1C, 0x00, // 35  53 5
 0x0C, 0x10, 0x20, 0x3C, 0x22, 0x22, 0x1C, 0x00, // 36  54 6
 0x3E, 0x02, 0x04, 0x08, 0x10, 0x10, 0x10, 0x00, // 37  55 7
 0x1C, 0x22, 0x22, 0x1C, 0x22, 0x22, 0x1C, 0x00, // 38  56 8
 0x1C, 0x22, 0x22, 0x1E, 0x02, 0x04, 0x18, 0x00, // 39  57 9
 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00, // 3A  58 :
 0x00, 0x00, 0x08, 0x00, 0x08, 0x08, 0x10, 0x00, // 3B  59 ;
 0x04, 0x08, 0x10, 0x20, 0x10, 0x08, 0x04, 0x00, // 3C  60 <
 0x00, 0x00, 0x3E, 0x00, 0x3E, 0x00, 0x00, 0x00, // 3D  61 =
 0x10, 0x08, 0x04, 0x02, 0x04, 0x08, 0x10, 0x00, // 3E  62 >
 0x1C, 0x22, 0x02, 0x04, 0x08, 0x00, 0x08, 0x00  // 3F  63 ?
};
*/
